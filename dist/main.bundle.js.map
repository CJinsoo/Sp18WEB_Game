{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/game/game.component.css","./src/app/game/game.component.html","./src/app/game/game.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/messages/messages.component.css","./src/app/messages/messages.component.html","./src/app/messages/messages.component.ts","./src/app/models/game.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<app-nav></app-nav>\\n<div class = \\\"container\\\">\\n    <app-messages></app-messages>\\n    <router-outlet></router-outlet>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","//angular imports\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule, Routes}  from '@angular/router';\nimport { HttpModule } from '@angular/http';\n//local imports\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { HomeComponent } from './home/home.component';\nimport { GameComponent } from './game/game.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    MessagesComponent,\n    HomeComponent,\n    GameComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    RouterModule.forRoot([//array of router object\n      {path: 'home', component: HomeComponent},\n      {path: 'game', component: GameComponent},\n      {path: '', redirectTo: '/home', pathMatch: 'full'}\n    ])\n  ],\n  providers: [],\n  bootstrap: [AppComponent]//put AppComponent right inside index.html.\n})\nexport class AppModule { }//put nothing in the module\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".my-quotes {\\n    cursor: not-allowed;\\n}\\n\\n.my-quotes .enabled {\\n    cursor: pointer;\\n}\\n\\n.my-quotes .enabled:hover {\\n    background-color: #DDEEFF;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/game/game.component.css\n// module id = ./src/app/game/game.component.css\n// module chunks = main","module.exports = \"<div class = \\\"row\\\" *ngIf = \\\"!Me\\\">\\n  <input #Name /><button (click) = \\\"login(Name.value)\\\" >Login</button>\\n</div>\\n<div class = \\\"row\\\" *ngIf = \\\"Me\\\">\\n  <div class = \\\"col-md-4\\\">\\n    <div class=\\\"card\\\">\\n    <div class = \\\"card-header\\\">My Quotes ({{Me.Name}})</div>\\n      <ul class=\\\"list-group list-group-flush my-quotes\\\">\\n          <li *ngFor = \\\"let quote of Me.MyQuotes\\\" \\n              (click) = \\\"submitQuote($event, quote)\\\"\\n              [ngClass] = \\\"{ enabled: !MyPlayedQuote() }\\\" \\n              class=\\\"list-group-item\\\">\\n              <!-- [ngClass] -> if it's not already selected, enable it. [] information from controller to the view. generate anything(string, array, json,...)-->\\n              {{quote}}\\n          </li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class = \\\"col-md-8\\\">\\n    <div class=\\\"card bg-success mb-3\\\">\\n      <div class = \\\"card-header text-white\\\">Played Quotes</div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li *ngFor = \\\"let quote of Model.PlayedQuotes\\\" \\n              [ngClass] = \\\"{'list-group-item-success': quote.Chosen}\\\"\\n              class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n              {{quote.Text}}\\n            <span *ngIf = \\\"!IsEveryoneDone() || (!IAmTheDealer() && !ChosenQuote())\\\" \\n                  class = \\\"badge badge-light\\\">hidden</span>\\n            <span *ngIf = \\\"ChosenQuote()\\\" class = \\\"badge badge-primary\\\">{{quote.PlayerId}}</span>\\n            <button *ngIf = \\\"IsEveryoneDone() && IAmTheDealer() && !ChosenQuote()\\\" \\n                    (click) = \\\"quote.Chosen = true\\\"\\n                    class = \\\"btn btn-sm btn-primary\\\">\\n                    Choose\\n            </button>\\n          </li>\\n        </ul>\\n    </div>\\n    <div class = \\\"card\\\">\\n      <img class = \\\"card-img-top card-img-bottom\\\" *ngIf = \\\"Model.Picture\\\" [src] = \\\"Model.Picture.url\\\"> <!-- [] around an attribute tells angular to bind data (without the curly braces {{Model.Picture}}(input text))- model pushing a view -->\\n      <div class = \\\"card-img-overlay\\\" style = \\\"text-align: center\\\">\\n        <button class = \\\"btn btn-success btn-lg\\\" (click) = \\\"flipPicture($event)\\\">Flip the Picture</button>\\n      </div>\\n  </div> \\n  <div class = \\\"col-md-4\\\">\\n    <div class=\\\"card\\\">\\n      <div class = \\\"card-header\\\">Other Players</div>\\n        <ul class=\\\"list-group list-group-flush\\\">\\n          <li *ngFor = \\\"let player of Model.Players\\\" class=\\\"list-group-item\\\">\\n            <img style=\\\"height: 16px; width: 16px\\\" class=\\\"rounded\\\">\\n            {{player.Name}}\\n          </li>\\n        </ul>\\n      </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/game/game.component.html\n// module id = ./src/app/game/game.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Http } from \"@angular/http\";\nimport { Game, User, Quote } from '../models/game';\n\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  Model = new Game();\n  Me : User;\n  \n  private _apiUrl = \"http://localhost:8080/game\";\n\n  constructor(private http: Http) { \n    //this.Me.Name = \"Jinsoo Choi\"\n    //http.get(this._apiUrl + \"/quote\", { params : { playerId: this.Me.Name } }).subscribe(data => this.Me.MyQuotes = data.json())//make data an object\n    //this.Me.MyQuotes = http.get(this._apiUrl + \"/quote\") -> would have been if we were synchronous.\n    setInterval(() => this.refresh(), 1000)//we made a function that calls the function. defined by where its defined.\n  }\n\n  ngOnInit() {\n  }\n\n  //get the game state, store in our local. Load it every few seconds\n  refresh(){\n    this.http.get(this._apiUrl + \"/state\")\n      .subscribe(data => this.Model = data.json())\n  } //this makes it local property. We don't have a local variable http in this function\n  //we are replacing our Model whenever refreshing. We don't want to have 7 quotes every few seconds. \n  \n  flipPicture(e: MouseEvent){//could ignore parameter\n    this.http.post(this._apiUrl + \"/picture\", {})\n      .subscribe();//we update our model in a second\n  }//rx.js is a functional programming, nothing happens until subscribe activates\n\n  //function on the component (in controller, we can specify as much, but in Model, we don't care)\n  //add event object inside parameter. e -> DOM object\n  submitQuote(e: MouseEvent, text: string) {\n    e.preventDefault();//do not create a browser event. I've already handled it.\n\n    if(this.MyPlayedQuote()) return;//If I've summited a quote, don't do anything.\n    //falsy that returns false\n    //is not a boolean?? -> means : if there's anything there\n\n    this.http.post(this._apiUrl + \"/quote\", {Text: text, PlayerId: this.Me.Name })\n      .subscribe(data =>{\n        if(data.json().sucess){\n          this.Me.MyQuotes.splice( this.Me.MyQuotes.indexOf(text), 1 );//Only if there's one quote submitted\n        }\n      });\n\n    //if not, push the quote and splice\n    //this.Model.PlayedQuote.push();\n    \n  }\n\n  /*\n  //quote that I submmited already. How do we keep track of it?\n  MyPlayedQuote(): Quote | null {\n    //putting types together, typescript specific.\n    //a function can return any type we want. If it's not null, it can't have null\n\n    //fat arrow function\n    return this.Model.PlayedQuote.find( x => x.PlayerName == this.Me.Name ); //null;\n  }\n  */\n\n  login(name: string){\n    this.http.get(this._apiUrl + \"/quote\", { params : { playerId: name } })\n    .subscribe(data=> this.Me =  {Name: name, MyQuotes: data.json() } )\n  }\n\n  MyPlayedQuote = () => this.Model.PlayedQuotes.find( x => x.PlayerId == this.Me.Name ); //null;\n\n  //give us the chosen quote (it actually belong to Model)\n  ChosenQuote = () => this.Model.PlayedQuotes.find( x => x.Chosen );\n  //belong to Model\n  IsEveryoneDone = () => this.Model.PlayedQuotes.length == this.Model.Players.length - 1;\n  //dynamic function using fat arrow function. Not just static. It fetches and sets the variable refresh.\n  IAmTheDealer = () => this.Me.Name == this.Model.DealerId;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/game/game.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class = \\\"row\\\">\\n  <div class=\\\"col\\\">     \\n    <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"../masakinewhair.gif\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Card title</h5>\\n          <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\n        </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col\\\">     \\n      <div class=\\\"card\\\">\\n          <img class=\\\"card-img-top\\\" src=\\\"masakinewhair.gif\\\" alt=\\\"Card image cap\\\">\\n          <div class=\\\"card-body\\\">\\n            <h5 class=\\\"card-title\\\">Card title</h5>\\n            <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n            <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\n          </div>\\n      </div>\\n  </div>\\n  <div class=\\\"col\\\">     \\n    <div class=\\\"card\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"masakinewhair.gif\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">Card title</h5>\\n          <p class=\\\"card-text\\\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\\n          <a href=\\\"#\\\" class=\\\"btn btn-primary\\\">Go somewhere</a>\\n        </div>\\n    </div>\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \"#messages {\\n    padding-top: .5rem;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.css\n// module id = ./src/app/messages/messages.component.css\n// module chunks = main","module.exports = \"<div id = \\\"messages\\\">\\n  <div class = \\\"alert alert-success\\\">\\n      {{Messages[0]}}\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/messages/messages.component.html\n// module id = ./src/app/messages/messages.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  Messages: string[];\n\n  constructor() { \n    this.Messages = ['You can now choose your own pictures.'];\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/messages/messages.component.ts","\n\nexport class Game {\n    Players: User[] = [];\n\n    //need identifier because variables are not passed through server.\n    DealerId: string;\n\n    Picture: {\n        url: string\n    };\n    \n    PlayedQuotes: Quote[] = [];\n\n} \n\nexport class User {\n    Name:string;\n    \n    MyQuotes:string[];\n}\n\nexport class Quote {\n    Text: string;\n    PlayerId: string;\n    Chosen: boolean = false;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/game.ts","module.exports = \".navbar {\\n    padding: 0 1rem;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.css\n// module id = ./src/app/nav/nav.component.css\n// module chunks = main","module.exports = \"<style>\\n    /*\\n    .col-lg-4 div {background:rgb(114, 114, 163);\\n            height:400px;\\n            }  \\n    .navbar {\\n      padding: 0 1rem;\\n    }*/\\n</style>\\n\\n<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary\\\">\\n      <div class = \\\"container\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">What Do You MEME?</a>\\n          <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n          </button>\\n          <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\n            <ul class=\\\"navbar-nav\\\">\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/home\\\" routerLinkActive=\\\"active\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"/game\\\" routerLinkActive=\\\"active\\\">Play</a>\\n              </li>\\n              <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link disabled\\\" routerLink=\\\"#\\\">Disabled</a>\\n              </li>\\n            </ul>\\n          </div>\\n     \\n      </div><!-- navbar container -->\\n    </nav> <!-- nav bar -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.html\n// module id = ./src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  //declare here to make it global\n  constructor() {\n    //var somthing = new Component({});\n\n    //something.animations.find();\n   }\n\n  ngOnInit() {//member function\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/nav.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}